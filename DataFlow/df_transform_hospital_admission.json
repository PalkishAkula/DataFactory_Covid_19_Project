{
    "name": "df_transform_hospital_admission",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ds_raw_hospital_admission",
                        "type": "DatasetReference"
                    },
                    "name": "houspitaladmisssionsource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_country_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "countrysource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_dim_date_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "dimdatesource"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admission_weekly",
                        "type": "DatasetReference"
                    },
                    "name": "sinkweekly"
                },
                {
                    "dataset": {
                        "referenceName": "ds_processed_hospital_admission_daily",
                        "type": "DatasetReference"
                    },
                    "name": "sinkdaily"
                }
            ],
            "transformations": [
                {
                    "name": "selectregfield"
                },
                {
                    "name": "lookupcountry"
                },
                {
                    "name": "select1"
                },
                {
                    "name": "splitdailyfromweekly"
                },
                {
                    "name": "aggdimdate"
                },
                {
                    "name": "joinwithdate"
                },
                {
                    "name": "pivotweekonly"
                },
                {
                    "name": "pivotdaily"
                },
                {
                    "name": "sortweekly"
                },
                {
                    "name": "sortdaily"
                },
                {
                    "name": "selectweekly"
                },
                {
                    "name": "selectdaily"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          country as string,",
                "          indicator as string,",
                "          date as date,",
                "          year_week as string,",
                "          value as double,",
                "          source as string,",
                "          url as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> houspitaladmisssionsource",
                "source(output(",
                "          country as string,",
                "          country_code_2_digit as string,",
                "          country_code_3_digit as string,",
                "          continent as string,",
                "          population as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> countrysource",
                "source(output(",
                "          date_key as string,",
                "          date as string,",
                "          year as string,",
                "          month as string,",
                "          day as string,",
                "          day_name as string,",
                "          day_of_year as string,",
                "          week_of_month as string,",
                "          week_of_year as string,",
                "          month_name as string,",
                "          year_month as string,",
                "          year_week as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> dimdatesource",
                "houspitaladmisssionsource select(mapColumn(",
                "          country,",
                "          indicator,",
                "          reported_date = date,",
                "          reported_year_week = year_week,",
                "          value,",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectregfield",
                "selectregfield, countrysource lookup(selectregfield@country == countrysource@country,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> lookupcountry",
                "lookupcountry select(mapColumn(",
                "          country = selectregfield@country,",
                "          indicator,",
                "          reported_date,",
                "          reported_year_week,",
                "          value,",
                "          source,",
                "          country = countrysource@country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select1",
                "select1 split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
                "     disjoint: false) ~> splitdailyfromweekly@(weekly, daily)",
                "dimdatesource aggregate(groupBy(ecdc_year_week = year+\"-W\"+lpad(week_of_year,2,'0')),",
                "     week_start_date = min(date),",
                "          week_end_date = max(date)) ~> aggdimdate",
                "splitdailyfromweekly@weekly, aggdimdate join(reported_year_week == ecdc_year_week,",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> joinwithdate",
                "joinwithdate pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_year_week,",
                "          week_start_date,",
                "          week_end_date,",
                "          source),",
                "     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> pivotweekonly",
                "splitdailyfromweekly@daily pivot(groupBy(country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_date,",
                "          source),",
                "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
                "     count = sum(value),",
                "     columnNaming: '$V_$N',",
                "     lateral: true) ~> pivotdaily",
                "pivotweekonly sort(desc(reported_year_week, true),",
                "     asc(country, true)) ~> sortweekly",
                "pivotdaily sort(desc(reported_date, true),",
                "     asc(country, true)) ~> sortdaily",
                "sortweekly select(mapColumn(",
                "          country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_year_week,",
                "          reported_week_start_date = week_start_date,",
                "          reported_week_end_date = week_end_date,",
                "          new_hospital_occupancy_count = {Weekly new hospital admissions per 100k_count},",
                "          new_icu_occupancy_count = {Weekly new ICU admissions per 100k_count},",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectweekly",
                "sortdaily select(mapColumn(",
                "          country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population,",
                "          reported_date,",
                "          {hospital occupancy_count} = {Daily hospital occupancy_count},",
                "          {ICU occupancy_count} = {Daily ICU occupancy_count},",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> selectdaily",
                "selectweekly sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> sinkweekly",
                "selectdaily sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> sinkdaily"
            ]
        }
    }
}